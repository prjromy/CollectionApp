@model  BuisnessObject.ViewModel.CustomerUserViewModel
@using BussinessLogic.Service
@using BussinessLogic.CustomHelper

@{
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Layout.cshtml";

}

<div class="customer-create-main">
    <div class="box box-success">
        <div class="box-header with-border">


            @*<div class="box-tools pull-right">
                    <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                </div>*@<!-- /.box-tools -->
            <form id="createCustomerUserSubmitForm">

                @Html.AntiForgeryToken()



                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(x => x.UserId)
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2", autocomplete = "off" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.NewPassword, new { @class = "form-control", @id = "Email", autocomplete = "off" })
                            @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>




                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.NewReEnterPassword, htmlAttributes: new { @class = "control-label col-md-2", autocomplete = "off" })

                        <div class="col-md-9">

                            @Html.TextBoxFor(model => model.NewReEnterPassword, new { @class = "form-control", autocomplete = "off" })
                            @Html.ValidationMessageFor(model => model.NewReEnterPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10" style="margin-top: 20px;">

                           

                            <input type="button" value="Edit Password" class="btn btn-success btn-save-password" />

                        </div>
                    </div>

                </div>
            </form>


        </div>
    </div>
</div>

<script src="~/Scripts/jquery-message-box.js"></script>
<script src="~/Scripts/ch-treeview.js"></script>
<script src="~/Scripts/ch-dialog.js"></script>
<script src="~/Scripts/jquery.form.min.js"></script>


<script>

   
    $.validator.unobtrusive.parse('#createCustomerUserSubmitForm');
    $('#createCustomerUserSubmitForm').on('click', ".btn-save-password", function () {
        debugger;
        $('#createCustomerUserSubmitForm').removeData("validator").removeData("unobtrusiveValidation");
        $.validator.unobtrusive.parse($('#createCustomerUserSubmitForm'));
       
        if ($("#createCustomerUserSubmitForm").valid()) {

           
            var formData = new FormData($('#createCustomerUserSubmitForm')[0]);
            }


            $.MessageBox({
                buttonDone: "Yes",
                buttonFail: "No",
                message: " Are you sure?"
            }).done(function () {
                //$(".checkboxCert:checked").removeAttr('disabled');
                //$('#createSubmitFormSuscription').ajaxSubmit({
                debugger;
                $.ajax({

                    url: '@Url.Action("ChangePassword", "CustomerUser")',
                    type: 'POST',
                    data: formData,
                    async: false,

                    success: function (result) {
                        //var url;
                        debugger;
                        if (result.Success) {
                            $.ajax({
                                url: "/CustomerUser/List",
                                type: 'post',
                                async: false,

                                success: function (data) {
                                    debugger

                                    $('section.content').html(data);
                                    SuccessAlert(result.Msg, 5000);
                                    document.getElementById('alert-success').scrollIntoView();
                                }
                            })
                        } else {
                            ErrorAlert(result.Msg, 5000);
                            document.getElementById('alert-error').scrollIntoView();
                        }
                    },
                    error: function (data) {
                        ErrorAlert(data.responseText, 15000)
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });
            }).fail(function () {
            });
        })







</script>

