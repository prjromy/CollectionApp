
@model BuisnessObject.ViewModel.CollectorLocationViewModel
@using BussinessLogic.Service

<link href="~/bootstrap/css/bootstrap.css" rel="stylesheet" />

<script src="~/Scripts/typeahead.min.js"></script>

<div class="box  collector-location-list-index">
    <input type="button" value="Collector Location Map" id="btn-create" class="btn btn-md btn-success btn-loc-col-create" style="border:none;margin-bottom:5px;" />
    <div class="collector-location-display">

    </div>
    <div class="box box-success">
        <div class="box-header with-border">
            <h3 class="box-title">Collection Assigned Location List</h3>
            <hr>
            @*<div class="box-tools pull-right">
                    <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>

                </div>*@<!-- /.box-tools -->

            <div class="col-md-12">
                <div class="box-tools col-md-3  form-group" id="collector-no">
                    @Html.TextBox("Collector Name", "", htmlAttributes: new { @class = "form-control",  @id = "CollectorNo", @placeholder = "CollectorName" })
                    @*@Html.ValidationMessageFor(model => model.CustNo, "", new { @class = "text-danger" })*@
                    @Html.HiddenFor(x => x.CollectorId)
                </div>
                <div class="box-tools col-md-3  form-group" id="location-no">
                    @Html.TextBox("Location Name", "", htmlAttributes: new { @class = "form-control", @id = "LocationNo", @placeholder = "LocationName" })
                   @Html.HiddenFor(x=>x.LocationId)
                 </div>
          



                <div class="input-group-btn form-group col-md-1 pull-left">
                    <button type="button" id="searchLocationCollector" class="btn btn-searchLocCollector btn-success" data-toggle="tooltip" title="Search"><i class="fa fa-search"></i></button>
                </div>


            </div>
        </div>
        <div class="CollectorLocation-List">



            @Html.Partial("_CollectorVsLocationList", Model)



        </div>
    </div>
</div>
<link href="~/Content/PagedList.css" rel="stylesheet" />
<script src="~/Scripts/SuscrptionJs/SuscriptionPage.js"></script>
<script src="~/Scripts/jquery-message-box.js"></script>
<link href="~/Content/ch-dialog.css" rel="stylesheet" />
<script src="~/Scripts/ch-dialog.js"></script>


<script>
    $(function () {
       
        $("#LocationNo").typeahead({

                hint: true,
                highlight: true,
                minLength: 1,
                source: function (request, response) {
                    $.ajax({
                        url: '/Suscription/LocationList/',
                        data: "{ 'prefix': '" + request + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            items = [];
                            map = {};
                            $.each(data, function (i, item) {
                                var id = item.Lid;
                                var name = item.LocationName;
                                map[name] = { id: id, name: name };
                                items.push(name);
                            });
                            response(items);
                            $(".dropdown-menu").css("height", "auto");
                            //$(".dropdown-menu").css("width", "");
                            $(".dropdown-menu").addClass("col-md-10");
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });

                },
                updater: function (item) {
                    $('#LocationId').val(map[item].id);
                    return item;
                }
            });
      
    })
    $(function () {
        $("#CollectorNo").typeahead({

            hint: true,
            highlight: true,
            minLength: 1,
            source: function (request, response) {
                $.ajax({
                    url: '/Collection/GetCollector/',
                    data: "{ 'prefix': '" + request + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        items = [];
                        map = {};
                        $.each(data, function (i, item) {
                            var id = item.CollectorID;
                            var name = item.CollectorName;
                            map[name] = { id: id, name: name };
                            items.push(name);
                        });
                        response(items);
                        $(".dropdown-menu").css("height", "auto");
                        //$(".dropdown-menu").css("width", "");
                        $(".dropdown-menu").addClass("col-md-10");
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            updater: function (item) {
                $('#CollectorId').val(map[item].id);
                return item;
            }
        });
    })
    $('.btn-loc-col-create').on('click', function () {
        debugger;

        var thisVal = $(this).val();
        if (thisVal == "Hide Section") {
            $(this).val("New ")
            $(".collector-location-display").hide();
        }
        else {
            $(this).val("Hide Section")
            $.ajax({
                type: "GET",
                url: "/CollectorLocationMap/CollectorLocationMapCreate",
                success: function (data) {
                    $(".collector-location-display").show();
                    $('.collector-location-display').html(data).find('.focusdiv').focus()
                }
            })
        }
    });
    $("div.col-loc-page-list").on('click', 'input.btnPaging', function (e) {
        debugger;
        e.stopImmediatePropagation();
        var parentContainer = $(this).parents()
        var me = $(this);
        var collectionno = parseInt (parentContainer.find("#collector-no").find("#CollectorId").val());
        var locationno = parseInt(parentContainer.find("#location-no").find("#LocationId").val());
       
        var container = parentContainer.find("div.col-loc-page-list")
        var url = "?collector=" + collectionno + "&location=" + locationno ;
        getPageNumberBtnAction(url, container, me)

    });
    $("div.col-loc-page-list").on('change', 'input#pageNo', function (e) {
        e.stopImmediatePropagation();
        debugger;
        var parentContainer = $(this).parents()
        var me = $(this);
        var collectionno = parseInt(parentContainer.find("#collector-no").find("#CollectorId").val());
        var locationno = parseInt(parentContainer.find("#location-no").find("#LocationId").val());

        var container = parentContainer.find("div.col-loc-page-list")
        var url = "?collector=" + collectionno + "&location=" + locationno;
        getPageNumberChangeData(url, container, me)
    });
    $("div.col-loc-page-list").on('change', 'input#pageSize', function (e) {
        e.stopImmediatePropagation();
        debugger;
        var parentContainer = $(this).parents()
        var me = $(this);
        var collectionno = parseInt(parentContainer.find("#collector-no").find("#CollectorId").val());
        var locationno = parseInt(parentContainer.find("#location-no").find("#LocationId").val());

        var container = parentContainer.find("div.col-loc-page-list")
        var url = "?collector=" + collectionno + "&location=" + locationno;
        getPageSizeChangeData(url, container, me)
    });
    $(".collector-location-list-index").on('click', '.btn-searchLocCollector', function (e) {
        e.stopImmediatePropagation();
        debugger;
        var parentContainer = $(this).parents()
        var me = $(this);
        var collectionno = parseInt(parentContainer.find("#collector-no").find("#CollectorId").val());
        var locationno = parseInt(parentContainer.find("#location-no").find("#LocationId").val());
        //var accNumber=parentContainer.find('#search-accountNumber').find('#txtaccountNumber').val();

        $.ajax({
            contentType: "html",
            type: "Get",
            url: "/CollectorLocationMap/_CollectorVsLocationList",
            data: { collector: collectionno, location: locationno },
            success: function (data) {
                $(".collector-location-list-index").find("div.CollectorLocation-List").html("");
                $(".collector-location-list-index").find("div.CollectorLocation-List").html(data);
            }
        })
    });

    function EditCustomerList(CID) {
        debugger

        $.ajax({
            type: "get",
            url: "/CollectorLocationMap/CollectorLocationMapCreate/",
            contentType: "application/json; charset=utf-8",
            data: { id: CID },
            dataType: "html",
            success: function (html) {
                debugger;
                $('.btn-loc-col-create').val("Hide Section")
                $(".collector-location-display").show();
                $('.collector-location-display').html(html).find('.focusdiv').focus()

                window.scrollTo(0, 0);
                debugger;
                //$('section.content').find('div:first').animate({ scrollTop: 0 }, 'slow');

            },
            error: function () {
                alert("error");
            }
        });
    }

  

    



</script>